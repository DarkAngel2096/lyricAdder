{"version":3,"sources":["../src/api.js"],"names":["api","options","cb","urlFromOptions","url","uri","endpoint","replace","clientId","tokenWithOauth","token","undefined","body","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA;AAAA,sFAAM;AAAA,QAAOC,OAAP,uEAAiB,EAAjB;AAAA,QAAqBC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACV;AACMC,0BAFI,GAEaF,QAAQG,GAAR,IAAeH,QAAQI,GAFpC;AAIJC,oBAJI,GAIO,qBAAMH,cAAN,IACbA,cADa,qCAEmBA,eAAeI,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAN1B;AAQJC,oBARI,GAQO,mBAAIP,OAAJ,EAAa,mBAAb,CARP;AASJQ,0BATI,GASa,mBAAIR,OAAJ,EAAa,uBAAb,CATb;AAAA;AAAA,mBAWS,2BAAY;AAC7BK,gCAD6B;AAE7BE,gCAF6B;AAG7BE,qBAAOD,iBAAiBA,eAAeF,OAAf,CAAuB,UAAvB,EAAmC,EAAnC,CAAjB,GAA0DI;AAHpC,aAAZ,CAXT;;AAAA;AAWJC,gBAXI;;AAAA,iBAiBN,0BAAWV,EAAX,CAjBM;AAAA;AAAA;AAAA;;AAAA,6CAmBDA,GAAG,KAAH,EAAU,IAAV,EAAgBU,IAAhB,CAnBC;;AAAA;AAAA,6CAsBHA,IAtBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAyBAC,OAAOC,OAAP,GAAiBd,GAAjB","file":"api.js","sourcesContent":["import { get, isFunction } from 'lodash';\nimport isURL from 'validator/lib/isURL';\n\nimport fetchHelper from './utils/fetch-helper';\n\nconst api = async (options = {}, cb) => {\n  // Set the url to options.uri or options.url.\n  const urlFromOptions = options.url || options.uri;\n\n  const endpoint = isURL(urlFromOptions)\n    ? urlFromOptions\n    : `https://api.twitch.tv/kraken/${urlFromOptions.replace(/^\\//, '')}`;\n\n  const clientId = get(options, 'headers.Client-ID');\n  const tokenWithOauth = get(options, 'headers.Authorization');\n\n  const body = await fetchHelper({\n    endpoint,\n    clientId,\n    token: tokenWithOauth ? tokenWithOauth.replace(/^Oauth /i, '') : undefined,\n  });\n\n  if (isFunction(cb)) {\n    // For now, match the existing API's non-standard callback pattern.\n    return cb(false, null, body);\n  }\n\n  return body;\n};\n\nmodule.exports = api;\n"]}