{"version":3,"sources":["../src/timer.js"],"names":["queue","defaultDelay","index","prototype","add","fn","delay","push","run","next","i","at","nextInQueue","setTimeout","reset","clear","exports"],"mappings":";;AAAA;AACA,SAASA,KAAT,CAAeC,YAAf,EAA6B;AAC3B,OAAKD,KAAL,GAAa,EAAb;AACA,OAAKE,KAAL,GAAa,CAAb;AACA,OAAKD,YAAL,GAAoBA,gBAAgB,IAApC;AACD;;AAED;AACAD,MAAMG,SAAN,CAAgBC,GAAhB,GAAsB,SAASA,GAAT,CAAaC,EAAb,EAAiBC,KAAjB,EAAwB;AAC5C,OAAKN,KAAL,CAAWO,IAAX,CAAgB;AACdF,UADc;AAEdC;AAFc,GAAhB;AAID,CALD;;AAOA;AACAN,MAAMG,SAAN,CAAgBK,GAAhB,GAAsB,SAASA,GAAT,CAAaN,KAAb,EAAoB;AACxC,MAAIA,SAASA,UAAU,CAAvB,EAA0B;AACxB,SAAKA,KAAL,GAAaA,KAAb;AACD;AACD,OAAKO,IAAL;AACD,CALD;;AAOA;AACAT,MAAMG,SAAN,CAAgBM,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AAAA;;AACrC,MAAMC,IAAI,KAAKR,KAAL,EAAV;AACA,MAAMS,KAAK,KAAKX,KAAL,CAAWU,CAAX,CAAX;AACA,MAAME,cAAc,KAAKZ,KAAL,CAAW,KAAKE,KAAhB,CAApB;;AAEA,MAAI,CAACS,EAAL,EAAS;AACP;AACD;;AAEDA,KAAGN,EAAH;AACA,MAAIO,WAAJ,EAAiB;AACfC,eAAW,YAAM;AACf,YAAKJ,IAAL;AACD,KAFD,EAEGG,YAAYN,KAAZ,IAAqB,KAAKL,YAF7B;AAGD;AACF,CAfD;;AAiBA;AACAD,MAAMG,SAAN,CAAgBW,KAAhB,GAAwB,SAASA,KAAT,GAAiB;AACvC,OAAKZ,KAAL,GAAa,CAAb;AACD,CAFD;;AAIA;AACAF,MAAMG,SAAN,CAAgBY,KAAhB,GAAwB,SAASA,KAAT,GAAiB;AACvC,OAAKb,KAAL,GAAa,CAAb;AACA,OAAKF,KAAL,GAAa,EAAb;AACD,CAHD;;AAKAgB,QAAQhB,KAAR,GAAgBA,KAAhB","file":"timer.js","sourcesContent":["// Initialize the queue with a specific delay..\nfunction queue(defaultDelay) {\n  this.queue = [];\n  this.index = 0;\n  this.defaultDelay = defaultDelay || 3000;\n}\n\n// Add a new function to the queue..\nqueue.prototype.add = function add(fn, delay) {\n  this.queue.push({\n    fn,\n    delay,\n  });\n};\n\n// Run the current queue..\nqueue.prototype.run = function run(index) {\n  if (index || index === 0) {\n    this.index = index;\n  }\n  this.next();\n};\n\n// Go to the next in queue..\nqueue.prototype.next = function next() {\n  const i = this.index++;\n  const at = this.queue[i];\n  const nextInQueue = this.queue[this.index];\n\n  if (!at) {\n    return;\n  }\n\n  at.fn();\n  if (nextInQueue) {\n    setTimeout(() => {\n      this.next();\n    }, nextInQueue.delay || this.defaultDelay);\n  }\n};\n\n// Reset the queue..\nqueue.prototype.reset = function reset() {\n  this.index = 0;\n};\n\n// Clear the queue..\nqueue.prototype.clear = function clear() {\n  this.index = 0;\n  this.queue = [];\n};\n\nexports.queue = queue;\n"]}