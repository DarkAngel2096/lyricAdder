{"version":3,"sources":["../src/utils.js"],"names":["self","get","obj1","obj2","isBoolean","obj","isFinite","Number","int","isNaN","parseFloat","isInteger","toNumber","isJustinfan","RegExp","test","username","isNull","isRegex","str","isString","isURL","justinfan","Math","floor","random","password","toLowerCase","replace","promiseDelay","Promise","setTimeout","resolve","time","replaceAll","Object","keys","forEach","x","unescapeHtml","safe","addWord","line","word","length","channel","charAt","extractNumber","parts","split","i","formatDate","hours","date","getHours","mins","getMinutes","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","isNode","process","toString","call","e","isExtension","window","chrome","runtime","id","merge","assign","splitLine","input","lastSpace","substring","lastIndexOf","num","precision","factor","pow","round","union","arr1","arr2","hash","ret","value","push","module","exports"],"mappings":"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","file":"utils.js","sourcesContent":["const self = {\n  // Return the second value if the first value is undefined..\n  get: (obj1, obj2) => (typeof obj1 === 'undefined' ? obj2 : obj1),\n\n  // Value is a boolean..\n  isBoolean: obj => typeof obj === 'boolean',\n\n  // Value is a finite number..\n  isFinite: int => Number.isFinite(int) && !Number.isNaN(parseFloat(int)),\n\n  // Value is an integer..\n  isInteger: int => !Number.isNaN(self.toNumber(int, 0)),\n\n  // Username is a justinfan username..\n  isJustinfan: username => RegExp('^(justinfan)(\\\\d+$)', 'g').test(username),\n\n  // Value is null..\n  isNull: obj => obj === null,\n\n  // Value is a regex..\n  isRegex: str => /[\\|\\\\\\^\\$\\*\\+\\?\\:\\#]/.test(str),\n\n  // Value is a string..\n  isString: str => typeof str === 'string',\n\n  // Value is a valid url..\n  isURL: str =>\n    RegExp(\n      '^(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$',\n      'i',\n    ).test(str),\n\n  // Return a random justinfan username..\n  justinfan: () => `justinfan${Math.floor(Math.random() * 80000 + 1000)}`,\n\n  // Return a valid password..\n  password: str => {\n    if (str === 'SCHMOOPIIE' || str === '' || str === null) {\n      return 'SCHMOOPIIE';\n    }\n    return `oauth:${str.toLowerCase().replace('oauth:', '')}`;\n  },\n\n  // Race a promise against a delay..\n  promiseDelay: time =>\n    new Promise(resolve => {\n      setTimeout(resolve, time);\n    }),\n\n  // Replace all occurences of a string using an object..\n  replaceAll: (str, obj) => {\n    if (str === null || typeof str === 'undefined') {\n      return null;\n    }\n    Object.keys(obj).forEach(x => {\n      str = str.replace(new RegExp(x, 'g'), obj[x]);\n    });\n    return str;\n  },\n\n  unescapeHtml: safe =>\n    safe\n      .replace(/\\\\&amp\\\\;/g, '&')\n      .replace(/\\\\&lt\\\\;/g, '<')\n      .replace(/\\\\&gt\\\\;/g, '>')\n      .replace(/\\\\&quot\\\\;/g, '\"')\n      .replace(/\\\\&#039\\\\;/g, \"'\"),\n\n  // Add word to a string..\n  addWord: (line, word) => {\n    if (line.length !== 0) {\n      return `${line} ${word}`;\n    }\n    return word;\n  },\n\n  // Return a valid channel name..\n  channel: str => {\n    const channel = typeof str === 'undefined' || str === null ? '' : str;\n    return channel.charAt(0) === '#'\n      ? channel.toLowerCase()\n      : `#${channel.toLowerCase()}`;\n  },\n\n  // Extract a number from a string..\n  extractNumber: str => {\n    const parts = str.split(' ');\n    for (let i = 0; i < parts.length; i++) {\n      if (self.isInteger(parts[i])) {\n        return ~~parts[i];\n      }\n    }\n    return 0;\n  },\n\n  // Format the date..\n  formatDate: date => {\n    let hours = date.getHours();\n    let mins = date.getMinutes();\n\n    hours = (hours < 10 ? '0' : '') + hours;\n    mins = (mins < 10 ? '0' : '') + mins;\n\n    return `${hours}:${mins}`;\n  },\n\n  // Inherit the prototype methods from one constructor into another..\n  inherits: (ctor, superCtor) => {\n    ctor.super_ = superCtor;\n    const TempCtor = function() {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  },\n\n  // Return whether inside a Node application or not..\n  isNode: () => {\n    try {\n      if (\n        typeof process === 'object' &&\n        Object.prototype.toString.call(process) === '[object process]'\n      ) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  isExtension: () => {\n    try {\n      if (window.chrome && window.chrome.runtime && window.chrome.runtime.id) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  // Merge two or more objects.\n  merge: Object.assign,\n\n  // Split a line but don't cut a word in half..\n  splitLine: (input, length) => {\n    const lastSpace = input.substring(0, length).lastIndexOf(' ');\n    return [input.substring(0, lastSpace), input.substring(lastSpace + 1)];\n  },\n\n  // Parse string to number. Returns NaN if string can't be parsed to number..\n  toNumber: (num, precision) => {\n    if (num === null) return 0;\n    const factor = Math.pow(10, self.isFinite(precision) ? precision : 0);\n    return Math.round(num * factor) / factor;\n  },\n\n  // Merge two arrays..\n  union: (arr1, arr2) => {\n    const hash = {};\n    const ret = [];\n\n    arr1.forEach(value => {\n      if (!hash[value]) {\n        hash[value] = true;\n        ret.push(value);\n      }\n    });\n\n    arr2.forEach(value => {\n      if (!hash[value]) {\n        hash[value] = true;\n        ret.push(value);\n      }\n    });\n\n    return ret;\n  },\n\n  // Return a valid username..\n  username: str => {\n    const username = typeof str === 'undefined' || str === null ? '' : str;\n    return username.charAt(0) === '#'\n      ? username.substring(1).toLowerCase()\n      : username.toLowerCase();\n  },\n};\n\nmodule.exports = self;\n"]}